Index: app/src/main/java/alexandrostselios/tichucounter/DataBaseManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package alexandrostselios.tichucounter;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\n\r\npublic class DataBaseManager extends Activity {\r\n\r\n    private Context context;\r\n    private String[] writeData = new String[200];\r\n    private static SQLiteDatabase mydatabase;\r\n\r\n    public DataBaseManager (SQLiteDatabase mydatabase){\r\n        this.mydatabase=mydatabase;\r\n    }\r\n\r\n    /*public DataBaseManager(Intent intent, Save context) throws IOException {\r\n        this.intent=intent;\r\n        this.context=context;\r\n    }\r\n\r\n    public DataBaseManager(Intent intent, Load context) throws IOException {\r\n        this.intent=intent;\r\n        this.context=context;\r\n    }*/\r\n\r\n    public void createDatabase() {\r\n        mydatabase.execSQL(\"CREATE TABLE IF NOT EXISTS Teams(ID INTEGER PRIMARY KEY AUTOINCREMENT,Team1 VARCHAR,Team2 VARCHAR);\");\r\n        mydatabase.execSQL(\"CREATE TABLE IF NOT EXISTS FinalScore(ID INTEGER PRIMARY KEY AUTOINCREMENT, TeamID INTEGER NOT NULL,Score1 INTEGER, Score2 INTEGER, FOREIGN KEY (ID) REFERENCES Teams (ID));\");\r\n        mydatabase.execSQL(\"CREATE TABLE IF NOT EXISTS ScoreHistory(ID INTEGER PRIMARY KEY AUTOINCREMENT,TeamID INTEGER NOT NULL,Score1 INTEGER, Score2 INTEGER, FOREIGN KEY (ID) REFERENCES Teams (ID));\");\r\n        mydatabase.execSQL(\"INSERT INTO Teams(Team1,Team2) VALUES('Alexandros','Tselios');\");\r\n    }\r\n\r\n    public void saveRoundScore(int score1,int score2){\r\n        String index;\r\n        Cursor resultSet = mydatabase.rawQuery(\"SELECT max(ID) FROM Teams;\",null);\r\n        resultSet.moveToFirst();\r\n        index = resultSet.getString(0);\r\n        mydatabase.execSQL(\"INSERT INTO ScoreHistory(TeamID,Score1,Score2) VALUES(\"+Integer.parseInt(index)+\",\"+score1+\",\"+score2+\");\");\r\n    }\r\n\r\n    public static void revertScore(){\r\n        String score;\r\n        Cursor resultSet = mydatabase.rawQuery(\"SELECT count(*) FROM ScoreHistory ORDER BY ID DESC;\",null);\r\n        resultSet.moveToFirst();\r\n        if(resultSet.getInt(0)>0){\r\n            resultSet = mydatabase.rawQuery(\"SELECT * FROM ScoreHistory ORDER BY ID DESC;\",null);\r\n            resultSet.moveToPosition(1);\r\n            score = resultSet.getString(2);\r\n            GUI.TextScore1.setText(score);\r\n            score = resultSet.getString(3);\r\n            GUI.TextScore2.setText(score);\r\n        }\r\n    }\r\n\r\n    public static void saveFinalScore(int score1,int score2) {\r\n        String index;\r\n        Cursor resultSet = mydatabase.rawQuery(\"SELECT max(ID) FROM Teams;\",null);\r\n        resultSet.moveToFirst();\r\n        index = resultSet.getString(0);\r\n        mydatabase.execSQL(\"INSERT INTO FinalScore(TeamID,Score1,Score2) VALUES(\"+Integer.parseInt(index)+\",\"+score1+\",\"+score2+\");\");\r\n    }\r\n\r\n    public void loadScore() {\r\n        String index;\r\n        Cursor resultSet = mydatabase.rawQuery(\"SELECT count(*) FROM FinalScore ORDER BY ID DESC;\",null);\r\n        resultSet.moveToFirst();\r\n        if(resultSet.getInt(0)>0){\r\n            resultSet = mydatabase.rawQuery(\"SELECT * FROM FinalScore ORDER BY ID DESC;\",null);\r\n            resultSet.moveToFirst();\r\n            index = resultSet.getString(2);\r\n            GUI.TextScore1.setText(index);\r\n            index = resultSet.getString(3);\r\n            GUI.TextScore2.setText(index);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/alexandrostselios/tichucounter/DataBaseManager.java	(revision cbd711cbf2476f39c9ac8e6be3a08f1dd2197baa)
+++ app/src/main/java/alexandrostselios/tichucounter/DataBaseManager.java	(date 1622811414074)
@@ -15,16 +15,6 @@
         this.mydatabase=mydatabase;
     }
 
-    /*public DataBaseManager(Intent intent, Save context) throws IOException {
-        this.intent=intent;
-        this.context=context;
-    }
-
-    public DataBaseManager(Intent intent, Load context) throws IOException {
-        this.intent=intent;
-        this.context=context;
-    }*/
-
     public void createDatabase() {
         mydatabase.execSQL("CREATE TABLE IF NOT EXISTS Teams(ID INTEGER PRIMARY KEY AUTOINCREMENT,Team1 VARCHAR,Team2 VARCHAR);");
         mydatabase.execSQL("CREATE TABLE IF NOT EXISTS FinalScore(ID INTEGER PRIMARY KEY AUTOINCREMENT, TeamID INTEGER NOT NULL,Score1 INTEGER, Score2 INTEGER, FOREIGN KEY (ID) REFERENCES Teams (ID));");
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion '28.0.3'\r\n    defaultConfig {\r\n        applicationId 'alexandrostselios.tichucounter'\r\n        minSdkVersion 17\r\n        targetSdkVersion 29\r\n        versionCode 16\r\n        versionName \"2\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    productFlavors {\r\n    }\r\n}\r\n\r\ndependencies {\r\n    compile fileTree(include: ['*.jar'], dir: 'libs')\r\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\r\n        exclude group: 'com.android.support', module: 'support-annotations'\r\n    })\r\n    //noinspection GradleCompatible,GradleCompatible,GradleCompatible\r\n    compile 'com.android.support:appcompat-v7:26.+'\r\n    compile 'com.android.support.constraint:constraint-layout:1.0.2'\r\n    //noinspection GradleCompatible\r\n    compile 'com.android.support:design:26.+'\r\n    testCompile 'junit:junit:4.12'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision cbd711cbf2476f39c9ac8e6be3a08f1dd2197baa)
+++ app/build.gradle	(date 1622810661057)
@@ -8,7 +8,7 @@
         minSdkVersion 17
         targetSdkVersion 29
         versionCode 16
-        versionName "2"
+        versionName "1"
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
     }
     buildTypes {
